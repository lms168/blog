<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>linux的IO模型与java中的IO操作</title>
      <link href="/2018/09/29/linux%E7%9A%84IO%E6%A8%A1%E5%9E%8B%E4%B8%8Ejava%E4%B8%AD%E7%9A%84IO%E6%93%8D%E4%BD%9C/"/>
      <url>/2018/09/29/linux%E7%9A%84IO%E6%A8%A1%E5%9E%8B%E4%B8%8Ejava%E4%B8%AD%E7%9A%84IO%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h1 id="阻塞-非阻塞与同步-异步的区别"><a href="#阻塞-非阻塞与同步-异步的区别" class="headerlink" title="阻塞/非阻塞与同步/异步的区别"></a>阻塞/非阻塞与同步/异步的区别</h1><h2 id="阻塞与非阻塞"><a href="#阻塞与非阻塞" class="headerlink" title="阻塞与非阻塞"></a>阻塞与非阻塞</h2><p><em>阻塞与非阻塞说的是调用者</em></p><h3 id="阻塞"><a href="#阻塞" class="headerlink" title="阻塞"></a>阻塞</h3><p>调用者<em>一直等待</em>被调用者的返回，别的事情什么也不干</p><h3 id="非阻塞"><a href="#非阻塞" class="headerlink" title="非阻塞"></a>非阻塞</h3><p>调用者<em>不等待</em>被调用者的返回，调用者可以先去做其他的事情</p><h2 id="同步与异步"><a href="#同步与异步" class="headerlink" title="同步与异步"></a>同步与异步</h2><p><em>同步与异步说的是被调用者</em></p><h3 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h3><p>被调用者在处理完自己的业务逻辑之后，<em>不会通知调用者</em>（调用者必须一直等着结果，因为同步操作不会主动告诉调用者，自己已经处理完了业务逻辑）</p><h3 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h3><p>被调用者在接收到调用者的请求后，立马通知调用者已经接到请求了，<em>处理完之后再通过回调等方式通知调用者</em></p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><ol><li>阻塞同步：人守在不会自动报警的烧水壶,人需要主动查看水是否开了</li><li>阻塞异步：人守在会自动报警的烧水壶前，水开了，水壶会自动报警</li><li>非阻塞同步: 人一边玩手机一边烧水，每隔一段时间去主动查看下水是否开了</li><li>非阻塞异步: 人一边玩手机一边使用会自动报警的水壶烧水， 水开了，水壶会自动报警</li></ol><h1 id="linux中的五种IO模型"><a href="#linux中的五种IO模型" class="headerlink" title="linux中的五种IO模型"></a>linux中的五种IO模型</h1><h2 id="阻塞IO模型"><a href="#阻塞IO模型" class="headerlink" title="阻塞IO模型"></a>阻塞IO模型</h2><p>一般表现为进程或线程等待某个条件，如果<em>条件不满足，则一致等待下去</em>。条件满足，则进行下一步操作，如下图<br><img src="/images/640.webp" alt="阻塞IO模型" title="图片1"><br>应用进程通过系统调用 recvfrom 接收数据，但由于内核还未准备好数据报，应用进程就会阻塞住，<em>直到内核准备好数据报，recvfrom 完成数据报复制工作，应用进程才能结束阻塞状态</em>。</p><h2 id="非阻塞IO模型"><a href="#非阻塞IO模型" class="headerlink" title="非阻塞IO模型"></a>非阻塞IO模型</h2><p>应用进程与内核交互，目的未达到之前，<em>不再一味的等待，而是直接返回；然后通过论询的方式，不停的去问内核数据准备好了没有</em>，如果某一次轮询发现数据已经准备好了，就把数据拷贝到用户空间中<br><img src="/images/641.webp" alt="非阻塞IO模型" title="图片2"><br>应用进程通过recvfrom调用不停的去和内核交互，直到内核准好数据。如果没有准备好，内核会返回error，引用进程在得到error后，过一段时间再发送recvfrom请求。<em>在两次发送请求的时间段，进程可以先做别的事情</em></p><h2 id="IO复用模型"><a href="#IO复用模型" class="headerlink" title="IO复用模型"></a>IO复用模型</h2><p><em>多个进程的IO可以注册到同一个管道上，这个管道会统一和内核进行交互</em>。当管道中的某一个请求需要的数据准备好之后，进程再把对应的数据拷贝到用户空间中<br><img src="/images/642.webp" alt="IO复用模型" title="图片3"><br>IO多路转接是多了一个select函数，多个进程的IO可以注册到同一个select上，当用户进程调用该select，select会监听所有注册好的IO，如果所有被监听的IO，如果所有被监听的IO需要的数据都没有准备好时，select调用进程会阻塞。当<em>任意一个IO所需要的数据准备好之后，select调用就会返回，然后进程再通过recvfrom来进行数据拷贝</em></p><h2 id="信号驱动IO模型"><a href="#信号驱动IO模型" class="headerlink" title="信号驱动IO模型"></a>信号驱动IO模型</h2><p><em>应用进程预先向内核注册一个信号处理函数，然后用户进程返回，并不阻塞</em>，当内核数据准备就绪时会发送一个信号给进程，用户进程便在信号处理函数中开始把数据拷贝到用户空间中<br><img src="/images/643.webp" alt="信号驱动IO模型" title="图片4"></p><h2 id="异步IO模型"><a href="#异步IO模型" class="headerlink" title="异步IO模型"></a>异步IO模型</h2><p>应用进程把IO请求传给内核后，完全<em>由内核去操作文件拷贝</em>。<em>内核完成相关操作后，会发送信号告诉应用进程本次IO已经完成</em><br><img src="/images/644.webp" alt="异步IO模型" title="图片4"><br>用户进程发起aio_read操作之后，给内核传递描述符、缓冲区指针、缓冲区大小等，<em>告诉内核当整个操作完成时，如何通知进程</em>，然后就立刻去做其他事情了。当内核收到aio_read后，会立刻返回，然后内核开始等待数据准备，数据准备好以后，直接把数据拷贝到用户空间，然后再通知进程本次IO已经完成</p><h2 id="五种IO模型对比"><a href="#五种IO模型对比" class="headerlink" title="五种IO模型对比"></a>五种IO模型对比</h2><p><strong>同步IO模型:</strong> 阻塞IO模型，非阻塞IO模型，IO复用模型，信号驱动IO模型这四种都是同步的，因为他们虽然在数据准备阶段有的是异步的，有的是同步的，但是<em>在通过recvfrom将数据从内核复制到用户空间的时候都是同步的，故认为他们都是同步的</em>。<br><strong>异步IO模型:</strong>异步IO模型是异步的，因为内核在将数据拷贝到用户空间之后再通知进程本次IO已经完成。如下图所示<br><img src="/images/645.webp" alt="五种IO模型对比" title="图片5"></p><h1 id="java中的IO模型"><a href="#java中的IO模型" class="headerlink" title="java中的IO模型"></a>java中的IO模型</h1><h2 id="BIO"><a href="#BIO" class="headerlink" title="BIO"></a>BIO</h2><p><strong>BIO （Blocking I/O）：</strong> 同步阻塞I/O模式，数据的读取写入必须阻塞在一个线程内等待其完成。<br>例子：有一排水壶在烧开水，BIO的工作模式就是，让一个线程停留在一个水壶那，直到这个水壶烧开，才去处理下一个水壶</p><h2 id="NIO"><a href="#NIO" class="headerlink" title="NIO"></a>NIO</h2><p><strong>NIO （New I/O）：</strong> 同时支持阻塞与非阻塞模式，但主要是使用同步非阻塞IO。<br>例子：有一排水壶在烧开水, NIO的工作模式是让一个线程不断的轮询每个水壶的状态，看看是否有水壶的状态发生了改变，从而进行下一步的操作；而主线程可以去做其他的事情</p><h2 id="AIO"><a href="#AIO" class="headerlink" title="AIO"></a>AIO</h2><p><strong>AIO （Asynchronous I/O）：</strong> 异步非阻塞I/O模型。<br>例子: 有一排水壶在烧开水, AIO的工作模式是为每个水壶上面装了一个开关，水烧开之后，水壶会自动通知进程水烧开了</p>]]></content>
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux下开发环境配置</title>
      <link href="/2018/09/28/linux%E4%B8%8B%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
      <url>/2018/09/28/linux%E4%B8%8B%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
      <content type="html"><![CDATA[<h1 id="配置jdk环境"><a href="#配置jdk环境" class="headerlink" title="配置jdk环境"></a>配置jdk环境</h1><p>下载jdk，解压到/usr/local下面</p><h2 id="编辑-etc-profile-并将java的环境写入"><a href="#编辑-etc-profile-并将java的环境写入" class="headerlink" title="编辑/etc/profile,并将java的环境写入"></a>编辑/etc/profile,并将java的环境写入</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> USR_DIR=/usr/<span class="built_in">local</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=<span class="variable">$USR_DIR</span>/jdk1.8.0_151</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br></pre></td></tr></table></figure><h2 id="执行source命令使环境变量生效"><a href="#执行source命令使环境变量生效" class="headerlink" title="执行source命令使环境变量生效"></a>执行source命令使环境变量生效</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h2 id="检查jdk环境是否生效"><a href="#检查jdk环境是否生效" class="headerlink" title="检查jdk环境是否生效"></a>检查jdk环境是否生效</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>如果出现版本信息，则说明jdk环境ok</p><h1 id="配置maven"><a href="#配置maven" class="headerlink" title="配置maven"></a>配置maven</h1><p>整个安装配置的过程和jdk差不多，唯一不同的是<br>配置完成之后需要把安装包中的settings.xml复制到<em>~/.m2/</em>下面,然后修改settings.xml中<em>nexus私库</em>和<em>本地仓库localRepository</em>路径</p><h1 id="配置svn"><a href="#配置svn" class="headerlink" title="配置svn"></a>配置svn</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install subversion</span><br></pre></td></tr></table></figure><h2 id="svn常用命令"><a href="#svn常用命令" class="headerlink" title="svn常用命令"></a>svn常用命令</h2><h3 id="创建svn目录"><a href="#创建svn目录" class="headerlink" title="创建svn目录"></a>创建svn目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn mkdir -m <span class="string">"创建一个文件夹"</span>  http://192.168.0.x:18080/svn/xxx</span><br></pre></td></tr></table></figure><h3 id="创建svn分支"><a href="#创建svn分支" class="headerlink" title="创建svn分支"></a>创建svn分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn cp -m <span class="string">"创建braches下分支"</span> http://192.168.0.x:18080/svn/xxx http://192.168.0.x:18080/svn/branches/</span><br></pre></td></tr></table></figure><h3 id="剪切svn分支"><a href="#剪切svn分支" class="headerlink" title="剪切svn分支"></a>剪切svn分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn checkout http://192.168.0.x:18080/svn/xxx</span><br></pre></td></tr></table></figure><h3 id="添加新文件"><a href="#添加新文件" class="headerlink" title="添加新文件"></a>添加新文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn add test.java</span><br></pre></td></tr></table></figure><h3 id="提交修改的文件"><a href="#提交修改的文件" class="headerlink" title="提交修改的文件"></a>提交修改的文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn commit test.java -m <span class="string">"向项目中添加类test.java"</span></span><br></pre></td></tr></table></figure><h3 id="更新文件"><a href="#更新文件" class="headerlink" title="更新文件"></a>更新文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn update ./</span><br></pre></td></tr></table></figure><h1 id="配置git"><a href="#配置git" class="headerlink" title="配置git"></a>配置git</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><h2 id="配置免密码推送到远程仓库"><a href="#配置免密码推送到远程仓库" class="headerlink" title="配置免密码推送到远程仓库"></a>配置免密码推送到远程仓库</h2><ol><li><p>登录远程仓库web页面，点击右上角的settings，然后点击左边SSH Keys</p></li><li><p>将本地的公钥复制填入key框中保存</p></li></ol><h2 id="命令手册"><a href="#命令手册" class="headerlink" title="命令手册"></a>命令手册</h2><p>具体使用请参看<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰老师git</a>的博客</p><h2 id="一台电脑配置多个git远程仓库"><a href="#一台电脑配置多个git远程仓库" class="headerlink" title="一台电脑配置多个git远程仓库"></a>一台电脑配置多个git远程仓库</h2><ol><li><p>编辑~/.ssh/config文件，填写两个git远程仓库的信息，注意要生成两对密钥公钥 参看<a href="/2018/09/28/ssh免密码登录/" title="ssh免密钥登录">ssh免密钥登录</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置GitLab，公司账号1：</span></span><br><span class="line">Host att_gitlab</span><br><span class="line">        HostName 192.168.0.x</span><br><span class="line">        Port 22</span><br><span class="line">        User lims@xxxx.com</span><br><span class="line">        PreferredAuthentications publickey</span><br><span class="line">        IdentityFile ~/.ssh/gitlab_zzcm_att_rsa</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置GitHub</span></span><br><span class="line">Host github</span><br><span class="line">        HostName github.com</span><br><span class="line">        User xxx@qq.com</span><br><span class="line">        IdentityFile ~/.ssh/github_rsa</span><br></pre></td></tr></table></figure></li><li><p>如果配置了git config –global user.name/user.mail 的全局信息则取消该全局信息,其他的使用与单git远程仓库没有区别</p></li></ol>]]></content>
      
      <categories>
          
          <category> 环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ssh免密码登录</title>
      <link href="/2018/09/28/ssh%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95/"/>
      <url>/2018/09/28/ssh%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95/</url>
      <content type="html"><![CDATA[<h1 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h1><p>实现<em>客户机A</em>免密码登录<em>服务器B</em></p><h1 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤"></a>2.步骤</h1><ol><li><p>在终端输入<code>ll ~/.ssh</code>如果存在<code>id_rsa_x</code>和<code>id_rsa_x.pub</code>则说明已经存在一对密钥/公钥</p></li><li><p>如果不存在密钥和公钥，则执行生成密钥和公钥的命令：</p><pre><code class="bash">ssh-keygen -t rsa -f ~/.ssh/id_rsa_x -C <span class="string">"密钥说明"</span> </code></pre><p>多次按回车（表示不设置密码）之后在<code>~/.ssh/</code>目录会多出 <code>id_rsa_x</code> 和 <code>id_rsa_x.pub</code> 两个文件</p></li><li><p>将id_rsa_x.pub中的内容追加到B机器的<code>.ssh/authorized_keys</code>文件中，如果不存在则手动创建该文件</p></li></ol><p><em>注意:</em> 一个客户端可以生成多个密钥/公钥对,<code>-f</code> 后面的参数值表示本次生成的密钥对文件的名字 。这在某些场景下尤为有用（例如：同一台机器需要同时配置两个github账号）</p><h1 id="3-原理"><a href="#3-原理" class="headerlink" title="3.原理"></a>3.原理</h1><p>先来了解两个术语：对称加密和非对称加密<br><em>对称加密:</em> 加密和解密都使用同一个密钥（效率高，安全性低）<br><em>非对称加密:</em> 公钥加密，私钥解密； 私钥加密，公钥解密（效率低，安全性高）</p><p>免密码登录就是使用了非对称加密来达到免密码登录功能的，具体流程如下：</p><ol><li>A把公钥复制到B的服务器上面</li><li>A远程登录B服务器，此时B会把自己的公钥返回给A，并且让A确认是否信任该公钥所代表的服务器<br><img src="/images/1.png" alt="图1" title="图片1"><br><img src="/images/2.png" alt="图2" title="图片2"></li><li>如果A信任B服务器，接着B服务器将会给该用户A发送一个挑战码，用户A将会用自己的私钥对挑战码进行一次加密，接着使用服务器B公钥对挑战码进行二次加密，然后将加密后的数据发送给服务器B；服务器B接收到用户A加密后的挑战码后先用自己的私钥进行一次解密再用之前保存在本机的用户A的公钥进行二次解密，如果得到的挑战码与自己发送的挑战码一致，则接受该用户免登陆认证A先使用<br><img src="/images/3.png" alt="图3" title="图片3"></li></ol>]]></content>
      
      <categories>
          
          <category> 环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nginx常用命令</title>
      <link href="/2018/09/28/nginx%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/09/28/nginx%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h1 id="nginx常用命令"><a href="#nginx常用命令" class="headerlink" title="nginx常用命令"></a>nginx常用命令</h1><h2 id="启动nginx服务"><a href="#启动nginx服务" class="headerlink" title="启动nginx服务"></a>启动nginx服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -c /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><h2 id="查看nginx运行状态"><a href="#查看nginx运行状态" class="headerlink" title="查看nginx运行状态"></a>查看nginx运行状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep nginx</span><br><span class="line">root     31064     1  0 15:59 ?        00:00:00 nginx: master process ./sbin/nginx -c ./conf/nginx.conf</span><br></pre></td></tr></table></figure><h2 id="检测nginx-conf是否正确"><a href="#检测nginx-conf是否正确" class="headerlink" title="检测nginx.conf是否正确"></a>检测nginx.conf是否正确</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure><h2 id="重新加载修改后的nginx的配置文件"><a href="#重新加载修改后的nginx的配置文件" class="headerlink" title="重新加载修改后的nginx的配置文件"></a>重新加载修改后的nginx的配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><h2 id="nginx帮助文档"><a href="#nginx帮助文档" class="headerlink" title="nginx帮助文档"></a>nginx帮助文档</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -h</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux常用的搜索替换命令</title>
      <link href="/2018/09/25/linux%E4%B8%8B%E5%B8%B8%E7%94%A8%E7%9A%84%E6%90%9C%E7%B4%A2%E6%9B%BF%E6%8D%A2%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/09/25/linux%E4%B8%8B%E5%B8%B8%E7%94%A8%E7%9A%84%E6%90%9C%E7%B4%A2%E6%9B%BF%E6%8D%A2%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h1 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h1><h2 id="文件夹下包含某个字段的所有文件"><a href="#文件夹下包含某个字段的所有文件" class="headerlink" title="文件夹下包含某个字段的所有文件"></a>文件夹下包含某个字段的所有文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在当前目录开始递归查找所有扩展名为.txt的文本文件，并找出包含”thermcontact”的行</span><br><span class="line">find . -name <span class="string">"*.txt"</span> | xargs grep <span class="string">"thermcontact"</span></span><br></pre></td></tr></table></figure><h2 id="grep显示匹配前后几行信息"><a href="#grep显示匹配前后几行信息" class="headerlink" title="grep显示匹配前后几行信息"></a>grep显示匹配前后几行信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep -C 5 foo file 显示file文件里匹配foo字串那行以及上下5行</span><br><span class="line">grep -B 5 foo file 显示foo及前5行</span><br><span class="line">grep -A 5 foo file 显示foo及后5行</span><br></pre></td></tr></table></figure><h1 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h1><h2 id="vim下对所有的行添加逗号和shell的换行符（-）"><a href="#vim下对所有的行添加逗号和shell的换行符（-）" class="headerlink" title="vim下对所有的行添加逗号和shell的换行符（\）"></a>vim下对所有的行添加逗号和shell的换行符（\）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">g/$/s//,\\/g</span><br><span class="line"></span><br><span class="line">替换前:</span><br><span class="line">105132</span><br><span class="line">106167</span><br><span class="line">106349</span><br><span class="line">106546</span><br><span class="line">106569</span><br><span class="line"></span><br><span class="line">替换后</span><br><span class="line">105132,\</span><br><span class="line">106167,\</span><br><span class="line">106349,\</span><br><span class="line">106546,\</span><br><span class="line">106569,\</span><br><span class="line">,\</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo的使用</title>
      <link href="/2018/09/25/hexo%E6%95%99%E7%A8%8B/"/>
      <url>/2018/09/25/hexo%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="config-git"><a href="#config-git" class="headerlink" title="config git"></a>config git</h3><p>编辑hexo安装路径下的配置文件<code>_config.xml</code>，修改博客的github项目路径<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:lms168/lms168.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      <categories>
          
          <category> 环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux下开发常用命令</title>
      <link href="/2018/09/25/inux%E4%B8%8B%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/09/25/inux%E4%B8%8B%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<p><strong>本文档是一个快速使用linux作为开发环境的查询手册，对于一些命令的更具体更合理的用法，可自行百度学习</strong></p><h1 id="基本的增删改命令"><a href="#基本的增删改命令" class="headerlink" title="基本的增删改命令"></a>基本的增删改命令</h1><h2 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch test.txt</span><br></pre></td></tr></table></figure><h2 id="向文本中追加内容"><a href="#向文本中追加内容" class="headerlink" title="向文本中追加内容"></a>向文本中追加内容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"222"</span> &gt;&gt; test.txt</span><br></pre></td></tr></table></figure><h2 id="覆盖文本中的所有内容"><a href="#覆盖文本中的所有内容" class="headerlink" title="覆盖文本中的所有内容"></a>覆盖文本中的所有内容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"111"</span> &gt; test.txt</span><br></pre></td></tr></table></figure><h2 id="查看文本中的内容"><a href="#查看文本中的内容" class="headerlink" title="查看文本中的内容"></a>查看文本中的内容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat test.txt</span><br></pre></td></tr></table></figure><h2 id="创建级联目录"><a href="#创建级联目录" class="headerlink" title="创建级联目录"></a>创建级联目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /xx/xx</span><br></pre></td></tr></table></figure><h2 id="文件重命名"><a href="#文件重命名" class="headerlink" title="文件重命名"></a>文件重命名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv test.txt test1.txt</span><br></pre></td></tr></table></figure><hr><h1 id="开发中常用命令"><a href="#开发中常用命令" class="headerlink" title="开发中常用命令"></a>开发中常用命令</h1><h2 id="ssh命令"><a href="#ssh命令" class="headerlink" title="ssh命令"></a>ssh命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@centos90</span><br></pre></td></tr></table></figure><h2 id="scp命令"><a href="#scp命令" class="headerlink" title="scp命令"></a>scp命令</h2><ul><li><p>将本机上的文件夹传到远程服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r /usr/<span class="built_in">local</span>/jdk root@centos90:/usr/<span class="built_in">local</span></span><br></pre></td></tr></table></figure></li><li><p>将远程服务器上面的文件夹拉取到本机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r root@centos90:/usr/<span class="built_in">local</span>/jdk ./</span><br></pre></td></tr></table></figure></li></ul><h2 id="查看本地端口是否被占用"><a href="#查看本地端口是否被占用" class="headerlink" title="查看本地端口是否被占用"></a>查看本地端口是否被占用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:8080</span><br><span class="line">或者</span><br><span class="line">netstat -tupl | grep 9902</span><br></pre></td></tr></table></figure><h2 id="查看远程端口是否开启"><a href="#查看远程端口是否开启" class="headerlink" title="查看远程端口是否开启"></a>查看远程端口是否开启</h2><ul><li><p>端口未开启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lms@LMS:~/Blog/blog/themes/maupassant$ telnet 192.168.0.90 9092</span><br><span class="line">Trying 192.168.0.90...</span><br><span class="line">telnet: Unable to connect to remote host: Connection refused</span><br></pre></td></tr></table></figure></li><li><p>端口已启用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lms@LMS:~/Blog/blog/themes/maupassant$ telnet 192.168.0.90 9902</span><br><span class="line">Trying 192.168.0.90...</span><br><span class="line">Connected to 192.168.0.90.</span><br><span class="line">Escape character is <span class="string">'^]'</span>.</span><br></pre></td></tr></table></figure></li></ul><h2 id="head-tail显示文件内容"><a href="#head-tail显示文件内容" class="headerlink" title="head/tail显示文件内容"></a>head/tail显示文件内容</h2><p><em>-n :</em> 表示显示多少条<br><em>-f :</em> 表示滚动显示</p><ul><li><p>显示文件头部信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head -n 10 log.txt</span><br></pre></td></tr></table></figure></li><li><p>显示文件尾部信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -n -f  10 log.txt</span><br></pre></td></tr></table></figure></li></ul><h2 id="列出所有java进程的pid"><a href="#列出所有java进程的pid" class="headerlink" title="列出所有java进程的pid"></a>列出所有java进程的pid</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jps</span><br></pre></td></tr></table></figure><h2 id="ps-ef用标准的格式显示进程信息"><a href="#ps-ef用标准的格式显示进程信息" class="headerlink" title="ps -ef用标准的格式显示进程信息"></a>ps -ef用标准的格式显示进程信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">过滤含有tomcat关键字的所有进程信息</span><br><span class="line">ps -ef|grep tomcat</span><br></pre></td></tr></table></figure><hr><h1 id="配置linux的工作环境"><a href="#配置linux的工作环境" class="headerlink" title="配置linux的工作环境"></a>配置linux的工作环境</h1><h2 id="查看linux的发行版本"><a href="#查看linux的发行版本" class="headerlink" title="查看linux的发行版本"></a>查看linux的发行版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsb_release -a</span><br></pre></td></tr></table></figure><h2 id="查看内存的使用情况"><a href="#查看内存的使用情况" class="headerlink" title="查看内存的使用情况"></a>查看内存的使用情况</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">free -m</span><br></pre></td></tr></table></figure><h2 id="查看cpu的情况"><a href="#查看cpu的情况" class="headerlink" title="查看cpu的情况"></a>查看cpu的情况</h2><ul><li><p>查看cpu的个数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo|grep <span class="string">"physical id"</span>|uniq|wc -l</span><br></pre></td></tr></table></figure></li><li><p>查看cpu的核数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo|grep <span class="string">"cpu cores"</span>|uniq</span><br></pre></td></tr></table></figure></li><li><p>查看cpu的型号频率</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo|grep <span class="string">"model name"</span>|uniq</span><br></pre></td></tr></table></figure></li></ul><h2 id="配置ubuntu开发环境"><a href="#配置ubuntu开发环境" class="headerlink" title="配置ubuntu开发环境"></a>配置ubuntu开发环境</h2><ul><li>安装<a href="https://pinyin.sogou.com/linux/?r=pinyin" target="_blank" rel="noopener">搜狗输入法</a>,并且配置<em>fcitx</em></li><li>安装<a href="https://wiki.winehq.org/Ubuntu_zhcn" target="_blank" rel="noopener">wine</a></li><li>安装<a href="https://github.com/askme765cs/Wine-QQ-TIM" target="_blank" rel="noopener">QQ</a> 本地环境有wine之后免安装即可运行</li></ul><h2 id="主机名配置"><a href="#主机名配置" class="headerlink" title="主机名配置"></a>主机名配置</h2><p><em>主机名(hostname)：</em>在一个局域网中，每台机器都有一个主机名，用于主机与主机之间的便于区分，就可以为每台机器设置主机名，以便于以容易记忆的方法来相互访问</p><ul><li><p>修改ubuntu的主机名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 编辑 /etc/hostname,填入主机名  </span><br><span class="line">    LMS</span><br><span class="line">2. 编辑/etc/hosts，将主机名对应的ip映射写入该文件中  </span><br><span class="line">    192.168.0.54       LMS</span><br></pre></td></tr></table></figure></li><li><p>修改centos6.x的主机名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.编辑/etc/sysconfig/network，修改主机名HOSTNAME对应的值</span><br><span class="line">    NETWORKING=yes</span><br><span class="line">    HOSTNAME=centos92</span><br><span class="line">    GATEWAY=192.168.0.1</span><br><span class="line"></span><br><span class="line">2.编辑/etc/hosts,将主机名对应的ip映射写入该文件中  </span><br><span class="line">    192.168.0.90       centos90</span><br></pre></td></tr></table></figure></li><li><p>修改centos7.x的主机名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 编辑 /etc/hostname,填入主机名  </span><br><span class="line">    adx61</span><br><span class="line">2. 设置主机名</span><br><span class="line">    sudo hostnamectl --static <span class="built_in">set</span>-hostname adx61</span><br></pre></td></tr></table></figure></li></ul><h2 id="域名配置"><a href="#域名配置" class="headerlink" title="域名配置"></a>域名配置</h2><p><em>域名(domainname)：</em>通俗的理解就是ip地址的简称。每个域名都对应一个IP地址，但一个IP地址可有对应多个域名</p><p>添加/修改域名<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一个ip地址对应多个域名</span><br><span class="line">192.168.0.90 centos90</span><br><span class="line">192.168.0.90 cccccccc</span><br></pre></td></tr></table></figure></p><h2 id="静态ip配置"><a href="#静态ip配置" class="headerlink" title="静态ip配置"></a>静态ip配置</h2><p>实际开发中如果ip地址一直变化是无法忍受的，故我们需要配置一个静态ip地址</p><ul><li><p>ifconfig查看ip信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">lms@LMS:~/Blog/blog$ ifconfig</span><br><span class="line">enp2s0    Link encap:以太网  硬件地址 44:8a:5b:65:31:8e  </span><br><span class="line">          inet 地址:192.168.0.54  广播:192.168.1.255  掩码:255.255.254.0</span><br><span class="line">          inet6 地址: fe80::468a:5bff:fe65:318e/64 Scope:Link</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  跃点数:1</span><br><span class="line">          接收数据包:1768559 错误:0 丢弃:50576 过载:0 帧数:0</span><br><span class="line">          发送数据包:273080 错误:0 丢弃:0 过载:0 载波:0</span><br><span class="line">          碰撞:0 发送队列长度:1000 </span><br><span class="line">          接收字节:593436184 (593.4 MB)  发送字节:40078308 (40.0 MB)</span><br><span class="line"></span><br><span class="line">lo        Link encap:本地环回  </span><br><span class="line">          inet 地址:127.0.0.1  掩码:255.0.0.0</span><br><span class="line">          inet6 地址: ::1/128 Scope:Host</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:65536  跃点数:1</span><br><span class="line">          接收数据包:183591 错误:0 丢弃:0 过载:0 帧数:0</span><br><span class="line">          发送数据包:183591 错误:0 丢弃:0 过载:0 载波:0</span><br><span class="line">          碰撞:0 发送队列长度:1000 </span><br><span class="line">          接收字节:76191308 (76.1 MB)  发送字节:76191308 (76.1 MB)</span><br></pre></td></tr></table></figure></li><li><p>编辑文件/etc/network/interfaces配置静态ip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># interfaces(5) file used by ifup(8) and ifdown(8)</span></span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line"><span class="comment"># The primary network interface</span></span><br><span class="line">auto enp2s0                 // 使用的enp2s0这个接口</span><br><span class="line">iface enp2s0 inet static    // 对这个接口，使用静态ip设置 </span><br><span class="line">address 192.168.0.54        // 要配置的静态ip地址</span><br><span class="line">netmask 255.255.254.0       //子网掩码</span><br><span class="line">gateway 192.168.0.1         //网关</span><br><span class="line"><span class="comment">#dns-nameserver 114.114.114.114  //DNS地址，可暂时不配置，待后面配置</span></span><br></pre></td></tr></table></figure></li><li><p>DNS服务器配置<br><em>一台机器可以配置多个域名解析器</em></p></li></ul><ol><li><p>编辑文件/etc/resolv.conf(机器重启被擦除)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nameserver 144.144.144.144</span><br></pre></td></tr></table></figure></li><li><p>编辑文件/etc/resolvconf/resolv.conf.d/base(重启不会被擦除) </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nameserver 144.144.144.144</span><br></pre></td></tr></table></figure></li></ol><ul><li>重启电脑或者网络，即可以愉快上网了</li></ul><h1 id="配置linux部署环境"><a href="#配置linux部署环境" class="headerlink" title="配置linux部署环境"></a>配置linux部署环境</h1><p><em>由于是内网故只是简单的打开关闭了防火墙，如果是正式环境应该根据实际需要开放端口</em></p><h2 id="centos6防火墙相关命令"><a href="#centos6防火墙相关命令" class="headerlink" title="centos6防火墙相关命令"></a>centos6防火墙相关命令</h2><ul><li><p>查看防火墙状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables status</span><br></pre></td></tr></table></figure></li><li><p>关闭防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">临时生效(重启后无效):  service iptables stop</span><br><span class="line">永久生效(重启后仍有效): chkconfig iptables off</span><br></pre></td></tr></table></figure></li><li><p>开启防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">临时生效(重启后无效)：service iptables start</span><br><span class="line">永久生效(重启后仍有效)：chkconfig iptables on</span><br></pre></td></tr></table></figure></li></ul><h2 id="centos7防火墙相关的命令"><a href="#centos7防火墙相关的命令" class="headerlink" title="centos7防火墙相关的命令"></a>centos7防火墙相关的命令</h2><ul><li><p>查看防火墙状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh adx61 firewall-cmd --state</span><br></pre></td></tr></table></figure></li><li><p>关闭防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh adx61 systemctl stop firewalld.service</span><br></pre></td></tr></table></figure></li><li><p>开启防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh adx61 systemctl start firewalld.service</span><br></pre></td></tr></table></figure></li></ul><h2 id="创建用户和组"><a href="#创建用户和组" class="headerlink" title="创建用户和组"></a>创建用户和组</h2><p>以创建一个运行elasticsearch程序的用户为例</p><ol><li><p>创建用户组es</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd es</span><br></pre></td></tr></table></figure></li><li><p>创建用户esUser并且加入到es组中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd esUser -g es -p zzcm2014</span><br></pre></td></tr></table></figure></li><li><p>修改要运行的文件的归属</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown  -R esUser:es /usr/<span class="built_in">local</span>/elasticsearch-5.4.0</span><br></pre></td></tr></table></figure></li><li><p>切换为创建的用户esUser</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su esUser</span><br></pre></td></tr></table></figure></li></ol><h2 id="修改文件的执行权限"><a href="#修改文件的执行权限" class="headerlink" title="修改文件的执行权限"></a>修改文件的执行权限</h2><p>对于没有执行权限文件的最粗暴的解决方式<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 /xx/*</span><br></pre></td></tr></table></figure></p><h1 id="一些小技巧"><a href="#一些小技巧" class="headerlink" title="一些小技巧"></a>一些小技巧</h1><h2 id="免用户名ssh登录"><a href="#免用户名ssh登录" class="headerlink" title="免用户名ssh登录"></a>免用户名ssh登录</h2><p>修改~/.ssh/config文件，添加如下配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Host 90</span><br><span class="line">HostName 192.168.0.90</span><br><span class="line">User root</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Host 91</span><br><span class="line">HostName 192.168.0.91</span><br><span class="line">User root</span><br><span class="line"></span><br><span class="line">Host 92</span><br><span class="line">HostName 192.168.0.92</span><br><span class="line">User root</span><br></pre></td></tr></table></figure></p><p>则登录时可直接使用<code>ssh centos90</code>就可以登录了，再也不用写<code>ssh root@centos90</code>了</p><h2 id="对远程机器批量执行命令"><a href="#对远程机器批量执行命令" class="headerlink" title="对远程机器批量执行命令"></a>对远程机器批量执行命令</h2><p>以批量启动zk服务为例<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;61..65&#125;; <span class="keyword">do</span> ssh adx<span class="variable">$i</span> <span class="string">"cd /usr/local/zookeeper-3.4.10/bin;sh  zkServer.sh start"</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure></p><h2 id="vim对所有的行添加逗号和shell的换行符"><a href="#vim对所有的行添加逗号和shell的换行符" class="headerlink" title="vim对所有的行添加逗号和shell的换行符"></a>vim对所有的行添加逗号和shell的换行符</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g/$/s//,\\/g</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
